# This is a docker-compose file meant to support local development (NOT for production use)
version: '3.7'

services:

  mongodb:
    image: mongo:4.2-bionic
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      DATAFLOW_DB_USERNAME: dataflow_user
      DATAFLOW_DB_PW: secret
    ports:
      - 27027:27017
    volumes:
      - ./mongo-data:/docker-entrypoint-initdb.d
      - mongo_dev_data:/data/db
    
  keycloak:
    image: jboss/keycloak:10.0.2
    container_name: odmp_keycloak
    networks:
      - keycloak-net
    ports:
      - 8083:8080
      - 8443:8443
    depends_on:
      - auth-postgres
    volumes:
      - ./kc-data:/tmp
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: secret
      DB_ADDR: auth-postgres
      DB_USER: keycloak
      DB_PASSWORD: secret
      DB_VENDOR: "POSTGRES"
      KEYCLOAK_IMPORT: /tmp/odmp_realm.json -Dkeycloak.profile.feature.upload_scripts=enabled

  auth-postgres:
    image: 'postgres'
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: secret
    networks:
      - keycloak-net

  pulsar:
    image: apachepulsar/pulsar:2.6.1
    restart: unless-stopped
    volumes:
      - pulsar_data:/pulsar/data
    environment:
      PULSAR_MEM: " -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    ports:
      - 8076:8080
      - 6650:6650
    command: bin/pulsar standalone

  # pulsar-manager:
  #   image: apachepulsar/pulsar-manager:v0.1.0
  #   ports:
  #     - "9527:9527"
  #   depends_on:
  #     - pulsar
  #   links:
  #     - pulsar
  #   volumes:
  #     - pulsar_data:/data
  #   environment:
  #     REDIRECT_HOST: "http://127.0.0.1"
  #     REDIRECT_PORT: "9527"
  #     DRIVER_CLASS_NAME: "org.postgresql.Driver"
  #     URL: "jdbc:postgresql://127.0.0.1:5432/pulsar_manager"
  #     USERNAME: "pulsar"
  #     PASSWORD: "pulsar"
  #     LOG_LEVEL: "DEBUG"

  redis:
    image: 'redis:6-alpine'
    restart: unless-stopped
    ports:
      - 6379:6379

  minio:
    image: 'minio/minio:latest'
    command: server /data
    volumes:
      - minio_data:/data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
    ports:
      - "9002:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  consul-server-1:
    image: 'consul:1.8.4'
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0"

  consul-agent-1:
    image: 'consul:1.8.4'
    command: "agent -retry-join consul-server-1 -client 0.0.0.0"
    

  haproxy:
    image: 'haproxy:2.1-alpine'
    network_mode: host
    volumes:
      - type: bind
        source: ./conf/dev/haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
    
    
volumes:
  auth_postgres_data:
    driver: local
  mongo_dev_data:
    driver: local
  pulsar_data:
    driver: local
  minio_data:
    driver: local
    
networks:
  keycloak-net:

