# This is a docker-compose file meant to support local development (NOT for production use)
version: '3.7'

services:

  mongodb:
    image: mongo:4.2-bionic
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      DATAFLOW_DB_USERNAME: dataflow_user
      DATAFLOW_DB_PW: secret
    ports:
      - 27027:27017
    volumes:
      - ./mongo-data:/docker-entrypoint-initdb.d
      - mongo_dev_data:/data/db
    
  keycloak:
    image: jboss/keycloak:10.0.2
    container_name: odmp_keycloak
    networks:
      - keycloak-net
      - default
    ports:
      - 8083:8080
      - 8443:8443
    depends_on:
      - auth-postgres
    volumes:
      - ./kc-data:/tmp
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: secret
      DB_ADDR: auth-postgres
      DB_USER: keycloak
      DB_PASSWORD: secret
      DB_VENDOR: "POSTGRES"
      KEYCLOAK_IMPORT: /tmp/odmp_realm.json -Dkeycloak.profile.feature.upload_scripts=enabled

  auth-postgres:
    image: 'postgres'
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: secret
    networks:
      - keycloak-net

  pulsar:
    image: apachepulsar/pulsar:2.6.1
    restart: unless-stopped
    volumes:
      - pulsar_data:/pulsar/data
    environment:
      PULSAR_MEM: " -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    ports:
      - 8076:8080
      - 6650:6650
    command: bin/pulsar standalone

  redis:
    image: 'redis:6-alpine'
    restart: unless-stopped
    ports:
      - 6379:6379

  minio:
    image: 'minio/minio:latest'
    command: server /data
    volumes:
      - minio_data:/data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
    ports:
      - "9002:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  consul-bootstrap:
    image: 'consul:1.8.4'
    restart: unless-stopped
    ports:
      - 8500:8500
    command: "agent -server -bootstrap-expect 2 -ui -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"

  consul-server:
    image: 'consul:1.8.4'
    restart: unless-stopped
    command: "agent -server -retry-join consul-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    depends_on:
      - consul-bootstrap


  consul-client:
    image: 'consul:1.8.4'
    restart: unless-stopped
    command: "agent -retry-join consul-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    depends_on:
      - consul-bootstrap

  # ffmpeg-plugin:
  #   image: opendmp/opendmp-plugin-ffmpeg:0.4.0
  #   environment:
  #     PLUGIN_PORT: 80
  #     CONSUL_HOST: consul-bootstrap
  #   depends_on:
  #     - consul-bootstrap
    

  haproxy:
    image: 'haproxy:2.1-alpine'
    network_mode: host
    volumes:
      - type: bind
        source: ./conf/dev/haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg


  # opendmp-dataflow:
  #   image: opendmp/opendmp-dataflow:0.4.0
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - keycloak
  #     - pulsar
  #     - mongodb
  #     - consul-bootstrap
  #   environment:
  #     PULSAR_ADMIN_URL: "http://pulsar:8076"
  #     PULSAR_CLIENT_URL: "pulsar://pulsar:6650"
  #     MONGO_HOST: "mongodb"
  #     MONGO_PORT: 27017
  #     KEYCLOAK_URL: "http://keycloak:8080"
  #     # KEYCLOAK_URL: "https://demo.opendmp.io"
  #     ODMP_DATAFLOW_PORT: 8080
  #     ODMP_PLUGINS_ENABLED: opendmp-ffmpeg-plugin
  #     AWS_S3_ENDPOINT: http://minio:9000
  #     CONSUL_HOST: consul-bootstrap
  #   volumes:  
  #     - /odmp/data:/odmp/data
    
    
volumes:
  auth_postgres_data:
    driver: local
  mongo_dev_data:
    driver: local
  pulsar_data:
    driver: local
  minio_data:
    driver: local
    
networks:
  keycloak-net:

